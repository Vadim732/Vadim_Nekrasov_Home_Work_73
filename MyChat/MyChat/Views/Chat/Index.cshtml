@model IEnumerable<MyChat.Models.Message>

@{
    ViewBag.Title = "Main page - Chat";
}

<div class="mt-4">
    <div class="row">
        <div class="bg-dark text-white pt-2 pb-2 text-center">
            <h3>Добро пожаловать в чат</h3>
        </div>
        <div class="col-12 border rounded chat">
            <div id="messages-container" class="p-2">
                @foreach (var m in Model)
                {
                    var alignmentClass = m.User.UserName == User.Identity.Name ? "text-end" : "text-start";
                    var messageClass = m.User.UserName == User.Identity.Name ? "my-message" : "other-message";

                    <div class="mt-2 @alignmentClass border-bottom border-secondary pb-2">
                        <div class="message @messageClass">
                            <img src="@m.User.Avatar" alt="User avatar" class="rounded-circle comment-user-avatar">
                            <a class="text-decoration-none text-black" asp-action="Profile" asp-route-userid="@m.UserId" asp-controller="Account"><strong>@m.User.UserName</strong></a>
                            <span class="text-muted small">@m.DateOfDispatch</span>
                            <div>@m.Inscription</div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="row bg-dark pt-3 pb-3">
        <form id="message-form" class="d-flex w-100">
            <div class="flex-grow-1 me-2">
                <input type="text" id="message-input" class="form-control" placeholder="Введите сообщение..." required maxlength="150">
                <div id="char-count" class="text-muted small mt-1">Осталось <span id="remaining-chars">150</span> символов</div>
            </div>
            <div class="message-button">
                <button type="submit" class="btn btn-outline-light w-100">Отправить</button>
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            const maxLength = 150;
            const messageInput = $('#message-input');
            const remainingChars = $('#remaining-chars');
            
            messageInput.on('input', function () {
                const charsLeft = maxLength - messageInput.val().length;
                remainingChars.text(charsLeft);
            });

            $('#message-form').on('submit', function (e) {
                e.preventDefault();
                const messageText = $('#message-input').val().trim();
                if (!messageText) return;
                $.ajax({
                    url: '/Chat/Create',
                    type: 'POST',
                    data: { inscription: messageText },
                    success: function (response) {
                        const userProfileUrl = `/Account/Profile?userid=${response.userId}`;
                        const newMessage = `
                            <div class="mt-2 text-end border-bottom border-secondary pb-2">
                                <div class="message my-message">
                                    <img src="${response.avatar}" alt="User avatar" class="rounded-circle comment-user-avatar">
                                    <a class="text-decoration-none text-black" href="${userProfileUrl}"><strong>${response.userName}</strong></a>
                                    <span class="text-muted small">${response.dateOfDispatch}</span>
                                    <div>${response.inscription}</div>
                                </div>
                            </div>
                        `;
                        $('#messages-container').append(newMessage);
                        $('#message-input').val('');
                        remainingChars.text(maxLength);
                    },
                    error: function () {
                        alert('Произошла ошибка при отправке сообщения.');
                    },
                });
            });
        });

        


    </script>

    <script>
        let lastMessageTime = new Date().toISOString();

        function fetchLatestMessages() {
            $.ajax({
                url: '/Chat/GetLatestMessages',
                type: 'GET',
                data: { lastMessageTime: lastMessageTime },
                success: function (response) {
                    response.forEach(msg => {
                        const newMessage = `
                                    <div class="mt-2">
                                        <span class="text-muted small">${msg.dateOfDispatch}</span>
                                        <strong>${msg.userName}</strong>
                                        <div>${msg.inscription}</div>
                                    </div>
                                `;
                        $('#messages-container').append(newMessage);
                        lastMessageTime = msg.dateOfDispatch;
                    });
                },
                error: function () {
                    console.error('Ошибка при получении новых сообщений');
                }
            });
        }

        setInterval(fetchLatestMessages, 5000);</script>
}
